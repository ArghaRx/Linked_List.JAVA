**** Optimal ***

class Solution {
    public Node copyRandomList(Node head) {
        getcopyNode(head);
        connectionRandom(head);
        return getTwoCopyList(head);
    }

    void getcopyNode(Node head) {
        Node temp = head;
        while (temp != null) {
            Node copyNode = new Node(temp.val);
            copyNode.next = temp.next;
            temp.next = copyNode;
           temp = temp.next.next;
        }

    }

    void connectionRandom(Node head) {
        Node temp = head;
        while (temp != null) {
            Node copyNode = temp.next;
            if (temp.random != null)
                copyNode.random = temp.random.next;
            else
                copyNode.random = null;

            temp = temp.next.next;

        }
    }

    Node getTwoCopyList(Node head) {
        Node temp = head;
        Node dummy = new Node(-1);
        Node cur = dummy;
        while (temp != null) {
            cur.next = temp.next; // connect
            temp.next = temp.next.next; // connect

            cur = cur.next;
            temp = temp.next;
        }
        return dummy.next;
    }

}
